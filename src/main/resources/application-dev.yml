spring:
  mvc:
    view:
      prefix: /pages/
      suffix: .html
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
      exclude: /webapp   #页面所载目录
  datasource:
    druid:
      master:
        url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=scm
        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
        user: scm
        password: 123456
        # 初始化大小
        initial-size: 5
        #最小连接池数量
        min-idle: 5
        #最大连接池数量 maxIdle已经不再使用
        max-active: 10
        # 配置获取连接等待超时的时间
        max-wait: 10000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        # 既作为检测的间隔时间又作为testWhileIdel执行的依据
        time-between-eviction-runs-millis: 600000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
        min-evictable-idle-time-millis: 300000
        # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        test-on-borrow: false
        # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        test-on-return: false
        # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        test-while-idle: true
        # 用来检测连接是否有效的sql 必须是一个查询语句
        # mysql中为 select 'x'
        # oracle中为 select 1 from dual
        validation-query: select 'x'
        keep-alive: true
        remove-abandoned: true
        remove-abandoned-timeout: 80
        log-abandoned: true
        # 打开PSCache，并且指定每个连接上PSCache的大小
        # 是否缓存preparedStatement,mysql5.5+建议开启
        pool-prepared-statements: true
        # 当值大于0时poolPreparedStatements会自动修改为true
        max-pool-prepared-statement-per-connection-size: 20
      slave:
        url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=ekp
        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
        user: scm
        password: 123456
        # 初始化大小
        initial-size: 5
        #最小连接池数量
        min-idle: 5
        #最大连接池数量 maxIdle已经不再使用
        max-active: 10
        # 配置获取连接等待超时的时间
        max-wait: 10000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        # 既作为检测的间隔时间又作为testWhileIdel执行的依据
        time-between-eviction-runs-millis: 600000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
        min-evictable-idle-time-millis: 300000
        # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        test-on-borrow: false
        # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        test-on-return: false
        # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        test-while-idle: true
        # 用来检测连接是否有效的sql 必须是一个查询语句
        # mysql中为 select 'x'
        # oracle中为 select 1 from dual
        validation-query: select 'x'
        keep-alive: true
        remove-abandoned: true
        remove-abandoned-timeout: 80
        log-abandoned: true
        # 打开PSCache，并且指定每个连接上PSCache的大小
        # 是否缓存preparedStatement,mysql5.5+建议开启
        pool-prepared-statements: true
        # 当值大于0时poolPreparedStatements会自动修改为true
        max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      # 配置扩展插件
      filters: slf4j,wall
      # 单独配置
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      timeBetweenLogStatsMillis: 120000
      # 配置监控服务器
      stat-view-servlet:
        enabled: false
        login-username: admin
        login-password: 123456
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        #allow:
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        enabled: false
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
  #jta相关参数配置
  jta:
    log-dir: classpath:tx-logs
    transaction-manager-id: txManager
server:
  port: 8099